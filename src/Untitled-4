                
               
                for (i in options) {

                    request(options[i], function(error, response, body) {

                        if (!error && response.statusCode == 200) {

                            var allTrades = JSON.parse(body);

                            // console.log(allTrades)

                            allTrades.reverse();
                            var order;
                            var allTradesArr = [];
                            var ordersArr = [];
                            var trans;
                            var transArr = [];
                            var expTrans;
                            var expTransArr = [];
                            var usedOptionExpiredNumsArr = [];

                            for (var x = 0; x < allTrades.length; x++)  {
                                if (allTrades[x].transactionSubType === "OE") {
                                    for (var e = 0; e < allTrades.length; e++) {
                                        if ((allTrades[e].type === "TRADE" || allTrades[e].type === "RECEIVE_AND_DELIVER") && allTrades[e].transactionItem.instrument.cusip === allTrades[x].transactionItem.instrument.cusip) {
                                            usedOptionExpiredNumsArr.push(e);
                                        }
                                    }
                                }
                            }

                            for (var x = 0; x < allTrades.length; x++) {

                                if (allTrades[x].orderType !== undefined) {
                                    order = {
                                                OrderDate: allTrades[x].closeTime,
                                                OrderId: allTrades[x].orderId,
                                                OrderType: allTrades[x].orderType,
                                                ComplexOrderType: allTrades[x].complexOrderStrategyType,
                                                OrderQuantity: allTrades[x].quantity,
                                                OrderPrice: allTrades[x].price,
                                                OrderDescription: allTrades[x].orderLegCollection[0].instrument.description,
                                                ClosingOrOpening: allTrades[x].orderLegCollection[0].positionEffect,
                                                Symbol: allTrades[x].orderLegCollection[0].instrument.symbol,
                                            }
                                    // console.log("this is ORDER")
                                    // console.log(order)
                                    ordersArr.push(order);
                                }

                                if (allTrades[x].type === "TRADE" && usedOptionExpiredNumsArr.indexOf(x) === -1) {
                                    trans = {
                                                TransType: allTrades[x].type,
                                                OrderId: allTrades[x].orderId,
                                                OrderIdShort: allTrades[x].orderId.substring(1,11),
                                                TransNetAmount: allTrades[x].netAmount,
                                                TransDate: allTrades[x].transactionDate,
                                                OrderDate: allTrades[x].orderDate,
                                                TransSubType: allTrades[x].transactionSubType,
                                                TransId: allTrades[x].transactionId,
                                                TransDescription: allTrades[x].description,
                                                TransAmount: allTrades[x].transactionItem.amount,
                                                TransPrice: allTrades[x].transactionItem.price,
                                                TransCost: allTrades[x].transactionItem.cost,
                                                OpeningOrClosing: allTrades[x].transactionItem.positionEffect,
                                                TransSymbol: allTrades[x].transactionItem.instrument.symbol,
                                                TransUnderlying: allTrades[x].transactionItem.instrument.underlyingSymbol,
                                                TransExpDate: allTrades[x].transactionItem.instrument.optionExpirationDate,
                                                PutOrCall: allTrades[x].transactionItem.instrument.putCall,
                                                TransCusip: allTrades[x].transactionItem.instrument.cusip,
                                                OptionDescription: allTrades[x].transactionItem.instrument.description
                                            }

                                        // console.log("this is TRANS")
                                        // console.log(trans)
                                        transArr.push(trans);
                                    
                                }
                                if (allTrades[x].transactionSubType === "OX" || allTrades[x].transactionSubType === "OE" || usedOptionExpiredNumsArr.indexOf(x) > -1) {
                                    expTrans = {
                                                TransType: allTrades[x].type,
                                                OrderId: allTrades[x].orderId,
                                                TransNetAmount: allTrades[x].netAmount,
                                                TransDate: allTrades[x].transactionDate,
                                                TransSubType: allTrades[x].transactionSubType,
                                                TransId: allTrades[x].transactionId,
                                                TransDescription: allTrades[x].description,
                                                TransAmount: allTrades[x].transactionItem.amount,
                                                TransCost: allTrades[x].transactionItem.cost,
                                                TransExpDate: allTrades[x].transactionItem.instrument.optionExpirationDate,
                                                TransCusip: allTrades[x].transactionItem.instrument.cusip
                                            }

                                        // console.log("this is EXP TRANS")
                                        // console.log(expTrans)
                                        expTransArr.push(expTrans);
                                    
                                }
                            }

                            var match;
                            var matchedTradesArr = [];

                            // var matchTradesFunc = function(value, num) {

                            // }

                            // for (var x = 0; x < ordersArr.length; x++) {
                            //     var trade = ordersArr[x].OrderId.toString();
                            //     for (var e = 0; e < transArr.length; e++) {
                            //         if (trade === transArr[e].OrderIdShort) {
                            //             console.log("match")
                            //             matchedTradesArr.push(ordersArr[x]);
                            //             matchedTradesArr.push(transArr[e]);

                            //         }
                            //     }
                            // }

                            for (var x = 0; x < transArr.length; x++) {
                                if (transArr[x].OrderIdShort === "2022941247") {
                                    console.log('found it')
                                    console.log(ordersArr[5].OrderId)
                                }
                            }

                            console.log(matchedTradesArr);
                            // console.log(ordersArr)
                            // console.log(transArr)

                            
                            // for (var x = dbRows; x < ordersInfo.length; x++) {
                                
                                
                            //     trade = {
                            //                 OrderDate: ordersInfo[x].closeTime,
                            //                 OrderId: ordersInfo[x].orderId,
                            //                 ClosingOrOpening: ordersInfo[x].orderLegCollection[0].positionEffect,
                            //                 Symbol: ordersInfo[x].orderLegCollection[0].instrument.symbol,
                            //                 Price: ordersInfo[x].price,
                            //                 Quantity: ordersInfo[x].quantity,
                            //                 ClosingFilledQuantity: ordersInfo[x].filledQuantity,
                            //                 ComplexOrderType: ordersInfo[x].complexOrderStrategyType,
                            //                 OrderType: ordersInfo[x].orderType,
                            //                 OrderDescription: ordersInfo[x].orderLegCollection[0].instrument.description
                            //     };

                            //     allTradesArr.push(trade);

                            };  // END Request IF

                    //         for (var x = 0; x < dbTradesArr.length; x++) {
                                
                    //             for (var i = 0; i < ordersInfo.length; i++) {

                    //                 if (dbTradesArr[x].OrderId === ordersInfo[i].orderId) {
                                        
                    //                     dbTradesArr[x].OrderDate = ordersInfo[i].closeTime;
                    //                     dbTradesArr[x].ClosingOrOpening = ordersInfo[i].orderLegCollection[0].positionEffect;
                    //                     dbTradesArr[x].Symbol = ordersInfo[i].orderLegCollection[0].instrument.symbol;
                    //                     dbTradesArr[x].Price = ordersInfo[i].price;
                    //                     dbTradesArr[x].OrderType = ordersInfo[i].orderType;
                    //                     dbTradesArr[x].OrderDescription = ordersInfo[i].orderLegCollection[0].instrument.description;
                    //                 }

                    //             }


                    //         }



                    //         // for (var x = 0; x < ordersInfo.length; x++) {
                                
                    //         //     pool.query('INSERT INTO Orders SET ?', {OrderDate: ordersInfo[x].closeTime, OrderDescription: ordersInfo[x].orderLegCollection[0].instrument.description}, function (error, rows, fields) {
                    //         //         console.log('Database Updated')

                    //         //         if (error) {
                    //         //             console.log(error)
                    //         //         }

                    //         //     });
                    //         // }

                            // console.log(ordersArr)
                                        
                        res.render('tradeInput', {Orders: ordersArr, Trans: transArr, ExpTrans: expTransArr, TimeCreate: dateTime});


                    }); 

                }